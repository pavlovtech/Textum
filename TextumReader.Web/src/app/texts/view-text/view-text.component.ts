import { AfterViewInit, Component, ContentChildren, ElementRef, OnChanges, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { TextsClient, Text } from 'src/app/autogenerated/texts-client';
import { TranslatorClient } from 'src/app/autogenerated/translator-client';
import { Popover } from "bootstrap";

@Component({
  templateUrl: './view-text.component.html',
  styleUrls: ['./view-text.component.scss']
})
export class ViewTextComponent implements OnInit {

  text$?: Observable<Text>;
  textId!: string;

  @ContentChildren("span") words!: QueryList<ElementRef>;

  constructor(private textsClient: TextsClient, private translatorClient: TranslatorClient, private route: ActivatedRoute) { }

  ngOnInit(): void {
    this.textId = this.route.snapshot.params.id;

    this.text$ = this.textsClient.getTextById(this.textId).pipe(
      map(text => {
        text.textContent = this.wrapWords(text.textContent);

        return text;
      })
    );
  }

  wrapWords(text?: string) {
    if (!text) {
      return;
    }

    var pattern = "а-яa-zäöüßûzàèéìíîòóùúzñáéíóúüÁČĎÉĚÍŇÓŘŠŤÚŮÝŽzšžõäöüѓјњќџąćęłńóóśźżăâîșțЂђјљњЋћЏџШшáäčďdžéíĺľňóôŕšťúýžґєії";

    var regexp = new RegExp("[a-zA-z" + pattern + "’'-]+", "gi");

    text = text.replace(regexp, "<span class='word'>" + "$&" + "</span>");
    text = text.replace(/\n/g, "<br />");
    
    return text;
  }

  popover!: Popover;

  onWordClicked(event: MouseEvent) {

    if (this.popover) {
      this.popover.hide();
    }

    const el = event.target as HTMLElement;
    this.translatorClient.getWordTranslation("en", "ru", el.innerText).subscribe(data => {

      const translations = data.translations?.reduce((accumulator, currentValue) => `${accumulator}<p>${currentValue.translation}</p>`, '');

      this.popover = new Popover(el, {
        container: 'body',
        content: translations,
        html: true,
        placement: 'bottom',
        trigger: 'manual',
        title: data.word
      });

      this.popover.show();
    });
  }

}
